========================================================================
'Test for 4-print_square'
========================================================================
'Function to test: print_square(size)'
========================================================================

>>> print_square = __import__('4-print_square').print_square

'size is positive integer value'
>>> print_square(3)
###
###
###

'size is 0'
print_square(0)


'size is negative integer value'
>>> print_square(-5)
Traceback (most recent call last):
...
ValueError: size must be >= 0

'size is a string'
>>> print_square("three")
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is a float'
>>> print_square(5.2)
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is a boolean'
>>> print_square(True)
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is a tuple'
>>> print_square((1, 2))
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is a list'
>>> print_square([1, 2])
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is a dict'
>>> print_square({1, 2})
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is None'
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

'size is empty'
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'
